// Code generated by MockGen. DO NOT EDIT.
// Source: github.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGitHubIface is a mock of GitHubIface interface.
type MockGitHubIface struct {
	ctrl     *gomock.Controller
	recorder *MockGitHubIfaceMockRecorder
}

// MockGitHubIfaceMockRecorder is the mock recorder for MockGitHubIface.
type MockGitHubIfaceMockRecorder struct {
	mock *MockGitHubIface
}

// NewMockGitHubIface creates a new mock instance.
func NewMockGitHubIface(ctrl *gomock.Controller) *MockGitHubIface {
	mock := &MockGitHubIface{ctrl: ctrl}
	mock.recorder = &MockGitHubIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGitHubIface) EXPECT() *MockGitHubIfaceMockRecorder {
	return m.recorder
}

// CreatePullRequestWithEmptyCommit mocks base method.
func (m *MockGitHubIface) CreatePullRequestWithEmptyCommit(ctx context.Context, org, repo, level, targetBaseBranch, headBranchSuffix string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePullRequestWithEmptyCommit", ctx, org, repo, level, targetBaseBranch, headBranchSuffix)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePullRequestWithEmptyCommit indicates an expected call of CreatePullRequestWithEmptyCommit.
func (mr *MockGitHubIfaceMockRecorder) CreatePullRequestWithEmptyCommit(ctx, org, repo, level, targetBaseBranch, headBranchSuffix any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePullRequestWithEmptyCommit", reflect.TypeOf((*MockGitHubIface)(nil).CreatePullRequestWithEmptyCommit), ctx, org, repo, level, targetBaseBranch, headBranchSuffix)
}

// SeparatePullRequests mocks base method.
func (m *MockGitHubIface) SeparatePullRequests(ctx context.Context, org, repo string, prNum int, targetBaseBranch, prBranch string) (int, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SeparatePullRequests", ctx, org, repo, prNum, targetBaseBranch, prBranch)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// SeparatePullRequests indicates an expected call of SeparatePullRequests.
func (mr *MockGitHubIfaceMockRecorder) SeparatePullRequests(ctx, org, repo, prNum, targetBaseBranch, prBranch any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SeparatePullRequests", reflect.TypeOf((*MockGitHubIface)(nil).SeparatePullRequests), ctx, org, repo, prNum, targetBaseBranch, prBranch)
}
